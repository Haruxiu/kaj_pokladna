{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinhp\\\\Desktop\\\\SIT\\\\KAJ\\\\src\\\\components\\\\Payment.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport OrderCard from './OrderCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Payment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOrders: [],\n      paymentMethod: 'cash',\n      amountReceived: '',\n      change: 0,\n      selectedTable: null\n    };\n\n    // Bind methods\n    this.toggleOrderSelection = this.toggleOrderSelection.bind(this);\n    this.calculateTotal = this.calculateTotal.bind(this);\n    this.processPayment = this.processPayment.bind(this);\n    this.generateReceipt = this.generateReceipt.bind(this);\n    this.updateOrderStatus = this.updateOrderStatus.bind(this); // Assuming this method is defined here or passed down\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Recalculate change if amount received, payment method, or selected orders change\n    if (prevState.amountReceived !== this.state.amountReceived || prevState.paymentMethod !== this.state.paymentMethod || prevState.selectedOrders !== this.state.selectedOrders) {\n      if (this.state.paymentMethod === 'cash' && this.state.amountReceived) {\n        const total = this.calculateTotal();\n        this.setState({\n          change: Math.max(0, parseFloat(this.state.amountReceived) - total)\n        });\n      }\n    }\n  }\n  toggleOrderSelection(orderId) {\n    this.setState(prevState => ({\n      selectedOrders: prevState.selectedOrders.includes(orderId) ? prevState.selectedOrders.filter(id => id !== orderId) : [...prevState.selectedOrders, orderId]\n    }));\n  }\n  calculateTotal() {\n    const {\n      orders\n    } = this.props;\n    const {\n      selectedOrders\n    } = this.state;\n    const readyOrders = orders.filter(order => order.status === 'ready');\n    return readyOrders.filter(order => selectedOrders.includes(order.id)).reduce((sum, order) => sum + order.total, 0);\n  }\n  processPayment() {\n    const {\n      orders,\n      setOrders,\n      setHistory,\n      showReceipt\n    } = this.props;\n    const {\n      selectedOrders,\n      paymentMethod,\n      amountReceived\n    } = this.state;\n    const total = this.calculateTotal();\n    if (paymentMethod === 'cash' && parseFloat(amountReceived) < total) {\n      alert('Obdržená částka je menší než celková cena!');\n      return;\n    }\n    const paidOrders = orders.filter(order => selectedOrders.includes(order.id));\n    const remainingOrders = orders.filter(order => !selectedOrders.includes(order.id));\n    const now = new Date();\n    const newHistoryEntries = paidOrders.map(order => ({\n      ...order,\n      status: 'paid',\n      paymentMethod,\n      paymentTimestamp: now.toISOString()\n    }));\n    setOrders(remainingOrders);\n    setHistory(prevHistory => [...prevHistory, ...newHistoryEntries]);\n    this.setState({\n      selectedOrders: [],\n      amountReceived: '',\n      change: 0,\n      selectedTable: null\n    });\n    const receiptContent = this.generateReceipt(paidOrders, paymentMethod, total);\n    showReceipt(receiptContent);\n  }\n  generateReceipt(paidOrders, method, total) {\n    const {\n      amountReceived,\n      change\n    } = this.state; // Access state for cash details\n    let receipt = '=== RESTAURACE ===\\n';\n    receipt += `Datum: ${new Date().toLocaleString()}\\n`;\n    receipt += '------------------\\n';\n    paidOrders.forEach(order => {\n      receipt += `Objednávka #${order.id.toString().slice(-4)}\\n`;\n      order.items.forEach(item => {\n        receipt += `${item.name.padEnd(20, ' ')} ${item.price.toFixed(2).padStart(8, ' ')} Kč\\n`;\n      });\n      receipt += `${'Celkem:'.padEnd(20, ' ')} ${order.total.toFixed(2).padStart(8, ' ')} Kč\\n`;\n      receipt += '------------------\\n';\n    });\n    receipt += `${'Celková částka:'.padEnd(20, ' ')} ${total.toFixed(2).padStart(8, ' ')} Kč\\n`;\n    receipt += `Způsob platby: ${method === 'cash' ? 'Hotovost' : 'Karta'}\\n`;\n    if (method === 'cash') {\n      receipt += `Obdržená částka: ${parseFloat(amountReceived).toFixed(2)} Kč\\n`; // Use state here\n      receipt += `Vráceno: ${change.toFixed(2)} Kč\\n`; // Use state here\n    }\n    receipt += '==================\\n';\n    receipt += 'Děkujeme za návštěvu!\\n';\n    return receipt;\n  }\n\n  // Assuming updateOrderStatus is passed as a prop from App\n  updateOrderStatus(orderId, newStatus) {\n    this.props.setOrders(prevOrders => prevOrders.map(order => order.id === orderId ? {\n      ...order,\n      status: newStatus\n    } : order));\n  }\n  render() {\n    const {\n      orders,\n      setOrders,\n      setHistory,\n      showReceipt\n    } = this.props; // Destructure all props needed\n    const {\n      selectedOrders,\n      paymentMethod,\n      amountReceived,\n      change,\n      selectedTable\n    } = this.state;\n    const readyOrders = orders.filter(order => order.status === 'ready');\n    const totalAmount = this.calculateTotal();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-container\",\n      role: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Platba\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), !selectedTable ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Vyberte st\\u016Fl k platb\\u011B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-list\",\n          role: \"radiogroup\",\n          \"aria-label\": \"V\\xFDb\\u011Br stolu k platb\\u011B\",\n          children: [{\n            id: 1,\n            name: 'Stůl 1'\n          }, {\n            id: 2,\n            name: 'Stůl 2'\n          }, {\n            id: 3,\n            name: 'Stůl 3'\n          }, {\n            id: 4,\n            name: 'Stůl 4'\n          }].map(table => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-item\",\n            onClick: () => this.setState({\n              selectedTable: table\n            }),\n            role: \"radio\",\n            \"aria-checked\": (selectedTable === null || selectedTable === void 0 ? void 0 : selectedTable.id) === table.id,\n            tabIndex: 0,\n            \"aria-label\": table.name,\n            children: table.name\n          }, table.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-btn\",\n            onClick: () => this.setState({\n              selectedTable: null\n            }),\n            \"aria-label\": \"Zp\\u011Bt na v\\xFDb\\u011Br stolu\",\n            children: \"\\u2190 Zp\\u011Bt na v\\xFDb\\u011Br stolu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Objedn\\xE1vky p\\u0159ipraven\\xE9 k platb\\u011B pro \", selectedTable.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-section\",\n          children: readyOrders.filter(order => order.tableId === selectedTable.id).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            role: \"status\",\n            children: \"\\u017D\\xE1dn\\xE9 objedn\\xE1vky p\\u0159ipraven\\xE9 k platb\\u011B pro tento st\\u016Fl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"orders-list\",\n            role: \"list\",\n            children: readyOrders.filter(order => order.tableId === selectedTable.id).map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-order-card\",\n              role: \"listitem\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"order-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedOrders.includes(order.id),\n                  onChange: () => this.toggleOrderSelection(order.id),\n                  \"aria-label\": `Vybrat objednávku ${order.id} k platbě`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(OrderCard, {\n                  order: order,\n                  compact: true,\n                  updateStatus: this.updateOrderStatus // Assuming updateOrderStatus is passed down or available\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this)\n            }, order.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Zp\\u016Fsob platby\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-methods\",\n            role: \"radiogroup\",\n            \"aria-label\": \"V\\xFDb\\u011Br zp\\u016Fsobu platby\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-method-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"cash\",\n                name: \"paymentMethod\",\n                value: \"cash\",\n                checked: paymentMethod === 'cash',\n                onChange: () => this.setState({\n                  paymentMethod: 'cash',\n                  amountReceived: '',\n                  change: 0\n                }),\n                \"aria-label\": \"Platba hotovost\\xED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"payment-method\",\n                htmlFor: \"cash\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Hotovost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-method-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"card\",\n                name: \"paymentMethod\",\n                value: \"card\",\n                checked: paymentMethod === 'card',\n                onChange: () => this.setState({\n                  paymentMethod: 'card',\n                  amountReceived: '',\n                  change: 0\n                }),\n                \"aria-label\": \"Platba kartou\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"payment-method\",\n                htmlFor: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Karta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), paymentMethod === 'cash' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cash-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"amountReceived\",\n                children: \"Obdr\\u017Een\\xE1 \\u010D\\xE1stka (K\\u010D)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"amountReceived\",\n                type: \"number\",\n                value: amountReceived,\n                onChange: e => this.setState({\n                  amountReceived: e.target.value\n                }),\n                min: totalAmount // Use the calculated total\n                ,\n                step: \"1\",\n                \"aria-label\": `Obdržená částka v Kč, minimálně ${totalAmount} Kč`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-amount\",\n              role: \"status\",\n              children: [\"Vr\\xE1ceno: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-label\": `Vrácená částka ${change.toFixed(2)} Kč`,\n                children: [change.toFixed(2), \" K\\u010D\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-amount\",\n              role: \"status\",\n              children: [\"Celkem k platb\\u011B: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-label\": `Celková částka k platbě ${totalAmount.toFixed(2)} Kč`,\n                children: [totalAmount.toFixed(2), \" K\\u010D\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"process-payment-btn\",\n              onClick: this.processPayment,\n              disabled: selectedOrders.length === 0 || paymentMethod === 'cash' && (!amountReceived || parseFloat(amountReceived) < totalAmount),\n              \"aria-label\": \"Zpracovat platbu\",\n              children: \"Zpracovat platbu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Payment;","map":{"version":3,"names":["React","useState","useEffect","OrderCard","jsxDEV","_jsxDEV","Payment","Component","constructor","props","state","selectedOrders","paymentMethod","amountReceived","change","selectedTable","toggleOrderSelection","bind","calculateTotal","processPayment","generateReceipt","updateOrderStatus","componentDidUpdate","prevProps","prevState","total","setState","Math","max","parseFloat","orderId","includes","filter","id","orders","readyOrders","order","status","reduce","sum","setOrders","setHistory","showReceipt","alert","paidOrders","remainingOrders","now","Date","newHistoryEntries","map","paymentTimestamp","toISOString","prevHistory","receiptContent","method","receipt","toLocaleString","forEach","toString","slice","items","item","name","padEnd","price","toFixed","padStart","newStatus","prevOrders","render","totalAmount","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","table","onClick","tabIndex","tableId","length","type","checked","onChange","compact","updateStatus","value","htmlFor","e","target","min","step","disabled"],"sources":["C:/Users/dinhp/Desktop/SIT/KAJ/src/components/Payment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport OrderCard from './OrderCard';\n\nclass Payment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOrders: [],\n      paymentMethod: 'cash',\n      amountReceived: '',\n      change: 0,\n      selectedTable: null,\n    };\n\n    // Bind methods\n    this.toggleOrderSelection = this.toggleOrderSelection.bind(this);\n    this.calculateTotal = this.calculateTotal.bind(this);\n    this.processPayment = this.processPayment.bind(this);\n    this.generateReceipt = this.generateReceipt.bind(this);\n    this.updateOrderStatus = this.updateOrderStatus.bind(this); // Assuming this method is defined here or passed down\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Recalculate change if amount received, payment method, or selected orders change\n    if (\n      prevState.amountReceived !== this.state.amountReceived ||\n      prevState.paymentMethod !== this.state.paymentMethod ||\n      prevState.selectedOrders !== this.state.selectedOrders\n    ) {\n      if (this.state.paymentMethod === 'cash' && this.state.amountReceived) {\n        const total = this.calculateTotal();\n        this.setState({ change: Math.max(0, parseFloat(this.state.amountReceived) - total) });\n      }\n    }\n  }\n\n  toggleOrderSelection(orderId) {\n    this.setState(prevState => ({\n      selectedOrders: prevState.selectedOrders.includes(orderId)\n        ? prevState.selectedOrders.filter(id => id !== orderId)\n        : [...prevState.selectedOrders, orderId]\n    }));\n  }\n\n  calculateTotal() {\n    const { orders } = this.props;\n    const { selectedOrders } = this.state;\n    const readyOrders = orders.filter(order => order.status === 'ready');\n    return readyOrders\n      .filter(order => selectedOrders.includes(order.id))\n      .reduce((sum, order) => sum + order.total, 0);\n  }\n\n  processPayment() {\n    const { orders, setOrders, setHistory, showReceipt } = this.props;\n    const { selectedOrders, paymentMethod, amountReceived } = this.state;\n    const total = this.calculateTotal();\n\n    if (paymentMethod === 'cash' && parseFloat(amountReceived) < total) {\n      alert('Obdržená částka je menší než celková cena!');\n      return;\n    }\n\n    const paidOrders = orders.filter(order => selectedOrders.includes(order.id));\n    const remainingOrders = orders.filter(order => !selectedOrders.includes(order.id));\n\n    const now = new Date();\n    const newHistoryEntries = paidOrders.map(order => ({\n      ...order,\n      status: 'paid',\n      paymentMethod,\n      paymentTimestamp: now.toISOString()\n    }));\n\n    setOrders(remainingOrders);\n    setHistory(prevHistory => [...prevHistory, ...newHistoryEntries]);\n\n    this.setState({ selectedOrders: [], amountReceived: '', change: 0, selectedTable: null });\n\n    const receiptContent = this.generateReceipt(paidOrders, paymentMethod, total);\n    showReceipt(receiptContent);\n  }\n\n  generateReceipt(paidOrders, method, total) {\n    const { amountReceived, change } = this.state; // Access state for cash details\n    let receipt = '=== RESTAURACE ===\\n';\n    receipt += `Datum: ${new Date().toLocaleString()}\\n`;\n    receipt += '------------------\\n';\n\n    paidOrders.forEach(order => {\n      receipt += `Objednávka #${order.id.toString().slice(-4)}\\n`;\n      order.items.forEach(item => {\n        receipt += `${item.name.padEnd(20, ' ')} ${item.price.toFixed(2).padStart(8, ' ')} Kč\\n`;\n      });\n      receipt += `${'Celkem:'.padEnd(20, ' ')} ${order.total.toFixed(2).padStart(8, ' ')} Kč\\n`;\n      receipt += '------------------\\n';\n    });\n\n    receipt += `${'Celková částka:'.padEnd(20, ' ')} ${total.toFixed(2).padStart(8, ' ')} Kč\\n`;\n    receipt += `Způsob platby: ${method === 'cash' ? 'Hotovost' : 'Karta'}\\n`;\n\n    if (method === 'cash') {\n      receipt += `Obdržená částka: ${parseFloat(amountReceived).toFixed(2)} Kč\\n`; // Use state here\n      receipt += `Vráceno: ${change.toFixed(2)} Kč\\n`; // Use state here\n    }\n\n    receipt += '==================\\n';\n    receipt += 'Děkujeme za návštěvu!\\n';\n\n    return receipt;\n  }\n\n   // Assuming updateOrderStatus is passed as a prop from App\n   updateOrderStatus(orderId, newStatus) {\n     this.props.setOrders(prevOrders =>\n       prevOrders.map(order =>\n         order.id === orderId\n           ? { ...order, status: newStatus }\n           : order\n       )\n     );\n   }\n\n  render() {\n    const { orders, setOrders, setHistory, showReceipt } = this.props; // Destructure all props needed\n    const { selectedOrders, paymentMethod, amountReceived, change, selectedTable } = this.state;\n    const readyOrders = orders.filter(order => order.status === 'ready');\n    const totalAmount = this.calculateTotal();\n\n    return (\n      <div className=\"payment-container\" role=\"main\">\n        <h2>Platba</h2>\n\n        {!selectedTable ? (\n          <div className=\"table-selection\">\n            <h3>Vyberte stůl k platbě</h3>\n            <div className=\"table-list\" role=\"radiogroup\" aria-label=\"Výběr stolu k platbě\">\n              {/* Tables are hardcoded here, should ideally come from props */}\n              {[{ id: 1, name: 'Stůl 1' }, { id: 2, name: 'Stůl 2' }, { id: 3, name: 'Stůl 3' }, { id: 4, name: 'Stůl 4' }].map(table => (\n                <div\n                  key={table.id}\n                  className=\"table-item\"\n                  onClick={() => this.setState({ selectedTable: table })}\n                  role=\"radio\"\n                  aria-checked={selectedTable?.id === table.id}\n                  tabIndex={0}\n                  aria-label={table.name}\n                >\n                  {table.name}\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"payment-content\">\n            <div className=\"section-header\">\n              <button\n                className=\"back-btn\"\n                onClick={() => this.setState({ selectedTable: null })}\n                aria-label=\"Zpět na výběr stolu\"\n              >\n                ← Zpět na výběr stolu\n              </button>\n              <h3>Objednávky připravené k platbě pro {selectedTable.name}</h3>\n            </div>\n            <div className=\"orders-section\">\n              {readyOrders.filter(order => order.tableId === selectedTable.id).length === 0 ? (\n                <div className=\"empty-state\" role=\"status\">Žádné objednávky připravené k platbě pro tento stůl</div>\n              ) : (\n                <div className=\"orders-list\" role=\"list\">\n                  {readyOrders.filter(order => order.tableId === selectedTable.id).map(order => (\n                    <div key={order.id} className=\"payment-order-card\" role=\"listitem\">\n                      <label className=\"order-checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedOrders.includes(order.id)}\n                          onChange={() => this.toggleOrderSelection(order.id)}\n                          aria-label={`Vybrat objednávku ${order.id} k platbě`}\n                        />\n                        <OrderCard\n                          order={order}\n                          compact\n                          updateStatus={this.updateOrderStatus} // Assuming updateOrderStatus is passed down or available\n                        />\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            <div className=\"payment-section\">\n              <h3>Způsob platby</h3>\n\n              <div className=\"payment-methods\" role=\"radiogroup\" aria-label=\"Výběr způsobu platby\">\n                <div className=\"payment-method-wrapper\">\n                  <input\n                    type=\"radio\"\n                    id=\"cash\"\n                    name=\"paymentMethod\"\n                    value=\"cash\"\n                    checked={paymentMethod === 'cash'}\n                    onChange={() => this.setState({ paymentMethod: 'cash', amountReceived: '', change: 0 })}\n                    aria-label=\"Platba hotovostí\"\n                  />\n                  <label className=\"payment-method\" htmlFor=\"cash\">\n                    <span>Hotovost</span>\n                  </label>\n                </div>\n\n                <div className=\"payment-method-wrapper\">\n                  <input\n                    type=\"radio\"\n                    id=\"card\"\n                    name=\"paymentMethod\"\n                    value=\"card\"\n                    checked={paymentMethod === 'card'}\n                    onChange={() => this.setState({ paymentMethod: 'card', amountReceived: '', change: 0 })}\n                    aria-label=\"Platba kartou\"\n                  />\n                  <label className=\"payment-method\" htmlFor=\"card\">\n                    <span>Karta</span>\n                  </label>\n                </div>\n              </div>\n\n              {paymentMethod === 'cash' && (\n                <div className=\"cash-details\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"amountReceived\">Obdržená částka (Kč)</label>\n                    <input\n                      id=\"amountReceived\"\n                      type=\"number\"\n                      value={amountReceived}\n                      onChange={(e) => this.setState({ amountReceived: e.target.value })}\n                      min={totalAmount} // Use the calculated total\n                      step=\"1\"\n                      aria-label={`Obdržená částka v Kč, minimálně ${totalAmount} Kč`}\n                    />\n                  </div>\n\n                  <div className=\"change-amount\" role=\"status\">\n                    Vráceno: <span aria-label={`Vrácená částka ${change.toFixed(2)} Kč`}>{change.toFixed(2)} Kč</span>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"payment-summary\">\n                <div className=\"total-amount\" role=\"status\">\n                  Celkem k platbě: <span aria-label={`Celková částka k platbě ${totalAmount.toFixed(2)} Kč`}>{totalAmount.toFixed(2)} Kč</span>\n                </div>\n\n                <button\n                  className=\"process-payment-btn\"\n                  onClick={this.processPayment}\n                  disabled={selectedOrders.length === 0 || (paymentMethod === 'cash' && (!amountReceived || parseFloat(amountReceived) < totalAmount))}\n                  aria-label=\"Zpracovat platbu\"\n                >\n                  Zpracovat platbu\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Payment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}